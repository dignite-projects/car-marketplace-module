// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using Dignite.CarMarketplace.DealerPlatform.Dealers;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;
using Volo.CmsKit.Users;

// ReSharper disable once CheckNamespace
namespace Dignite.CarMarketplace.DealerPlatform.Dealers;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IDealerAppService), typeof(DealerClientProxy))]
public partial class DealerClientProxy : ClientProxyBase<IDealerAppService>, IDealerAppService
{
    public virtual async Task AddAdministratorAsync(Guid userId)
    {
        await RequestAsync(nameof(AddAdministratorAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), userId }
        });
    }

    public virtual async Task<DealerDto> CreateAsync(DealerCreateDto input)
    {
        return await RequestAsync<DealerDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(DealerCreateDto), input }
        });
    }

    public virtual async Task<DealerDto> FindByCurrentUserAsync()
    {
        return await RequestAsync<DealerDto>(nameof(FindByCurrentUserAsync));
    }

    public virtual async Task<ListResultDto<CmsUserDto>> GetAdministratorsAsync()
    {
        return await RequestAsync<ListResultDto<CmsUserDto>>(nameof(GetAdministratorsAsync));
    }

    public virtual async Task RemoveAdministratorAsync(Guid userId)
    {
        await RequestAsync(nameof(RemoveAdministratorAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), userId }
        });
    }

    public virtual async Task<DealerDto> UpdateAsync(Guid id, DealerUpdateDto input)
    {
        return await RequestAsync<DealerDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(DealerUpdateDto), input }
        });
    }
}
